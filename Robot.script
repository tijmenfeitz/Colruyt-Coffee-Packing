
socket_open("192.168.0.185", 30000)
set_digital_out(0, True)

# Base position
home = p[-0.802442,0.171133,0.863442,2.19829,-2.2339,0.0670559]

#------------------------------------250-------------------------------------------------

# Grab positions 
pickupLeft = p[-0.697873, -0.540173, 0.161892, -2.18482, 2.18736, 0.0450819]
aboveLeft = p[-0.697852, -0.540214, 0.31588, -2.18484, 2.18735, 0.0451003]
pickupRight = p[-0.697882, -0.367876, 0.163691, -2.18473, 2.18727, 0.0451668]
aboveRight = p[-0.697852, -0.367876, 0.31588, -2.18484, 2.18735, 0.0451003]

# Stage 1 positions
aboveBox1 = p[-0.736681, 0.206807, 0.605355, -0.0236563, 3.11154, 0.0406951]
insideBox1 = p[-0.736681, 0.206807, 0.248918, -0.0236563, 3.11154, 0.0406951]


# Stage 2 positions
aboveBox2 = p[-0.763335, 0.206565, 0.592384, -0.0236563, 3.11154, 0.0406951]
insideBox2 = p[-0.772303,0.208367,0.293877,-0.0239014,3.11151,0.0406111]

#old
#p[-0.763335, 0.206575, 0.32812, -0.0236563, 3.11154, 0.0406951]


last = p[-0.764459,0.20835,0.656533,-0.0439619,-2.35529,0.00333879]
lastInside = p[-0.76445,0.208295,0.454766,-0.0437638,-2.35536,0.00335891]

#------------------------------------2.5-------------------------------------------------

bPickupLeft = p[-0.77457, -0.538519, 0.384903, 2.12682,-2.16884,0.0828811]
bAboveLeft = p[-0.77457, -0.538519, 0.570805, 2.12676,-2.1687,0.0828203]
bPickupRight = p[-0.785863,-0.374606,0.366997,2.15634,-2.16781,0.0897502]
bAboveRight = p[-0.785863,-0.374606,0.570795,2.1561,-2.16769,0.0896678]

bInsideBox = p[-0.8187,0.210957,0.480519,2.17339,-2.24495,0.0681295]
bAboveBox = p[-0.831439,0.211103,0.962729,2.18,-2.25256,0.0863733]

bBeforeAbove = p[-0.809176, -0.218774, 0.977078, 2.19215, -2.21965, 0.100173]

#-------------------------------------------------------------------------------------


while True:
    mess = socket_read_byte_list(3)
    while True:
        mess = socket_read_byte_list(3)
        bytes = mess
        if bytes[1] > -1:
            break
        end
        sleep(0.1)
    end

    bags_ready = mess[1]
    box_ready = mess[2]
    program = mess[3]

    if bags_ready == 1 and box_ready == 1:
        if program == 1 or program == 4:
            movel(home)

            if program == 1:
                movel(pose_add(pickupLeft, p[0.0, 0.0, 0.2, 0.0, 0.0, 0.0]))
                movel(pickupLeft)
                set_digital_out(2, True)
                sleep(0.2)
                set_payload(2.1, [0.0, 0.0, 0.0])
                movel(pose_add(aboveLeft, p[0.0, 0.0, 0.2, 0.0, 0.0, 0.0]))

                movel(pose_add(pickupRight, p[0.0, 0.0, 0.2, 0.0, 0.0, 0.0]))
                movel(pickupRight)
                set_digital_out(1, True)
                sleep(0.2)
                set_payload(2.6, [0.0, 0.0, 0.0])
                movel(pose_add(aboveRight, p[0.0, 0.0, 0.2, 0.0, 0.0, 0.0]))

                movel(aboveBox1)
                movel(insideBox1)
                set_digital_out(1, False)
                set_digital_out(2, False)
                set_payload(1.6, [0.0, 0.0, 0.0])
                movel(aboveBox1)

                movel(pose_add(pickupLeft, p[0.0, 0.0, 0.2, 0.0, 0.0, 0.0]))
                movel(pickupLeft)
                set_digital_out(2, True)
                sleep(0.2)
                set_payload(2.1, [0.0, 0.0, 0.0])
                movel(pose_add(aboveLeft, p[0.0, 0.0, 0.2, 0.0, 0.0, 0.0]))

                movel(pose_add(pickupRight, p[0.0, 0.0, 0.2, 0.0, 0.0, 0.0]))
                movel(pickupRight)
                set_digital_out(1, True)
                sleep(0.2)
                set_payload(2.6, [0.0, 0.0, 0.0])
                movel(pose_add(aboveRight, p[0.0, 0.0, 0.2, 0.0, 0.0, 0.0]))

                movel(aboveBox2)
                movel(insideBox2)
                set_digital_out(1, False)
                set_digital_out(2, False)
                set_payload(1.6, [0.0, 0.0, 0.0])
                movel(aboveBox2)

                movel(pose_add(pickupLeft, p[0.0, 0.0, 0.2, 0.0, 0.0, 0.0]))
                movel(pickupLeft)
                set_digital_out(2, True)
                sleep(0.2)
                set_payload(2.6, [0.0, 0.0, 0.0])
                movel(pose_add(aboveLeft, p[0.0, 0.0, 0.2, 0.0, 0.0, 0.0]))
                movel(last)
                movel(lastInside)
                set_digital_out(2, False)
                sleep(0.1)
                movel(last)
            end

            if program == 4:
                movel(home)

                # Pick left 2.5kg
                movel(bAboveLeft)
                movel(bPickupLeft)
                sleep(0.4)
                set_digital_out(2, True)
                set_payload(6.6, [0.0, 0.0, 0.0])
                sleep(0.1)
                movel(bAboveLeft)

                # Pick right 2.5kg
                movel(bAboveRight)
                sleep(3)
                movel(bPickupRight)

                sleep(0.3)
                set_digital_out(1, True)
                set_payload(11.6, [0.0, 0.0, 0.0])
                sleep(0.3)
                movel(bAboveRight)

                # Move to box
                movel(bBeforeAbove)
                sleep(0.1)
                movel(bAboveBox)
                sleep(3)
                movel(bInsideBox)
                set_digital_out(1, False)
                set_digital_out(2, False)
                set_payload(1.6, [0.0, 0.0, 0.0])
          
            end

            mess = socket_read_byte_list(3)
            movel(home)
            socket_send_byte(99)
            sleep(2)
            #set_digital_out(5, True)
            sleep(6)
            #set_digital_out(5, False)
            program = 0
            textmsg(mess)
        else:
            textmsg("Waiting for bags or box.")
            textmsg(mess)
            sleep(0.1)
        end
    else:
        textmsg("out")
        textmsg(mess)
        sleep(0.1)
    end
end
end
